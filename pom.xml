<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <!-- 项目信息 -->
  <groupId>com.huluyao</groupId>
  <artifactId>study</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>studyJava</name>
  <description>study java in dairy</description>
  <!-- 项目打包方式 -->
  <packaging>jar</packaging>
  <!-- 定义全局属性 -->
  <properties>
  	<spring.version>4.1.1.RELEASE</spring.version>
  </properties>
  
  <!-- 管理依赖 maven通过坐标groupId,artifactId,version来标识一个唯一的二级制版本，一个maven工程如果要添加某个
  	   依赖，只需要查找这个依赖的坐标即可。
  	 通过parent可以实现pom文件继承父类完成统一配置管理，可以使用<dependencyManagement></dependencyManagement> 
  	和<pluginManagement></pluginManagement>统一依赖和插件，不同于<dependencies>和<plugins>的是，如果子类pom没有
  	声明<dependency>和<plugin>不生效
   -->
  <dependencies>
  	<dependency>
  			<!-- 标识组织 -->
            <groupId>org.springframework</groupId>
            <!-- 标识项目 -->
            <artifactId>spring-context</artifactId>
            <!-- 标识版本 -->
            <version>${spring.version}</version>
   	</dependency>

  	<dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <version>1.1.3</version>
     </dependency>
     
     <dependency>
	    <groupId>com.itextpdf</groupId>
	    <artifactId>itextpdf</artifactId>
	    <version>5.5.13</version>
	</dependency>
	<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>1.2.3</version><!--$NO-MVN-MAN-VER$-->
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>1.7.25</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-core</artifactId>
		    <version>1.2.3</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<dependency>
		  <groupId>org.xerial.snappy</groupId>
		  <artifactId>snappy-java</artifactId>
		  <version>1.1.7.2</version>
		  <scope>system</scope>
		  <systemPath>D:\otherJars\snappy-java-1.1.7.2.jar</systemPath>
		</dependency>

  </dependencies>
  
  <!-- 管理配置或定制插件 -->
  <build>
  	<plugins>
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
  		</plugin>
  	</plugins>
  </build>
  
</project>